What are custom hooks?

Custom hooks are just regular JS functions, just as the built-hooks like useState that is in the end just a function. The only difference is that custom hook functions contains stateful logic.

You can build these custom hook functions to outsource stateful logic into re-usable functions

Rules of hooks:
1. You can only call react hooks in react functions i.e react component functions or a custom hook
2. You can only call react hooks at the top level
    - Hooks can not be called inside a nested function
    - Can't called inside any block statemet ex: if, switch, try, for, any random function

Creating a custom react hook function
- create a new folder named hooks
- when naming the hook function make sure to use 'use' at the begining of the name, react will make sure that the defined function is treated as a custom hook. React will trigger warning for these hook functions if you violate the rules of hooks inside your project

Exapmle:
Lets say we have two component BackwardsCounter and ForwardsCounter. The logic inside the component is almost similar. One increments the value and the other one decrements the value

We can create a custom hook and outsource/separate the similar logic. 

Custom hooks can have arguments and we can pass parameters when we are calling the hooks inside our compnents.

We can also return any value of a custom hook

Important: if you are using useEffect hook, make sure to pass in all the dependencies inside an array. For example: argumnets will be inside the dependency list if it is used inside useEffect

When we call the hook function, all the code inside the function will be executed. If state is used it will register on the call, useEffect will run and so on.

If the state that is inside a custom hook and you use the hook inside your component, that state will be tied to the component that has called the hook.

If we use custom hooks in multiple components, every component will have it's own state. Just because we are using a custom hook does not mean that we share the state between components. Only the logic is shared not the concrete state


